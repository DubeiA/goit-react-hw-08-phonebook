{"version":3,"file":"static/js/83.90919034.chunk.js","mappings":"8LAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,QAA5B,E,QCChC,EAA4B,+BAA5B,EAAsE,8BAAtE,EAAgH,+BAAhH,EAA6J,iCAA7J,EAA2M,gCAA3M,EAA0P,kC,kBCKnP,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYR,GAAaS,KAAI,SAAAC,GAAO,OAAIA,EAAQC,IAAZ,IAwBrD,OACE,iBAAMC,SAvBa,SAAAC,GACnBA,EAAEC,iBAEF,MAAyBD,EAAEE,OAAnBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,OAEd,GAAIT,EAASU,SAASN,EAAKO,OACzBC,MAAM,GAAD,OAAIR,EAAKO,MAAT,oCADP,CAKA,IAAME,EAAO,CACXC,WAAW,IAAIC,MAAOC,cACtBZ,KAAMA,EAAKO,MACXM,MAAOR,EAAOE,MACdO,IAAIC,EAAAA,EAAAA,OAGNrB,GAASsB,EAAAA,EAAAA,IAAWP,IAEpBP,EAAEE,OAAOa,OAXR,CAYF,EAGC,UACE,mBAAOC,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,mBACA,kBACED,UAAWC,EACXC,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,mBAAOL,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,qBAEA,kBACED,UAAWC,EACXC,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAASF,UAAWC,EAAjC,6BAMP,C,oBC9DD,EAA4B,0BAA5B,EAA8D,sBCIjDK,EAAS,WACpB,IAAM9B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,mBAAOuB,UAAWC,EAAlB,mCAEE,kBACED,UAAWC,EACXC,KAAK,OACLpB,KAAK,SACLqB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRE,SAdiB,SAAAC,GACrBhC,GAASiC,EAAAA,EAAAA,IAAaD,EAAME,cAAcrB,OAC3C,MAgBF,ECtBc,SAASsB,IACtB,OACE,4BACE,SAACpC,EAAD,KACA,SAAC+B,EAAD,MAIL,C","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts.entities;\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\nexport const getError = state => state.contacts.contacts.error;\n\nexport const getFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"labelName\":\"ContactForm_labelName__3dKMP\",\"spanName\":\"ContactForm_spanName__OibhL\",\"imputName\":\"ContactForm_imputName__XQvsX\",\"labelNumber\":\"ContactForm_labelNumber__ifMHw\",\"spanNumber\":\"ContactForm_spanNumber__-FZxR\",\"buttonSubmit\":\"ContactForm_buttonSubmit__8QQ3D\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/contactOperation';\nimport css from '../ContactForm/ContactForm.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const userName = useSelector(getContacts).map(contact => contact.name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = e.target;\n\n    if (userName.includes(name.value)) {\n      alert(`${name.value} is already in your contact`);\n      return;\n    }\n\n    const data = {\n      createdAt: new Date().toISOString(),\n      name: name.value,\n      phone: number.value,\n      id: nanoid(),\n    };\n\n    dispatch(addContact(data));\n\n    e.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={css.labelName}>\n        <span className={css.spanName}>Name</span>\n        <input\n          className={css.imputName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label className={css.labelNumber}>\n          <span className={css.spanNumber}>Number</span>\n\n          <input\n            className={css.imputName}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.buttonSubmit}>\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"imputName\":\"Filter_imputName__aft7c\",\"label\":\"Filter_label__vEd1E\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SearchByName } from 'redux/contacts/contactsReducer';\nimport css from '../Filter/Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterOnChange = event => {\n    dispatch(SearchByName(event.currentTarget.value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.imputName}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={filterOnChange}\n      />\n    </label>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\n// import { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\n\nexport default function Home() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      {/* <ContactList /> */}\n    </div>\n  );\n}\n"],"names":["getContacts","state","contacts","entities","ContactForm","dispatch","useDispatch","userName","useSelector","map","contact","name","onSubmit","e","preventDefault","target","number","includes","value","alert","data","createdAt","Date","toISOString","phone","id","nanoid","addContact","reset","className","css","type","pattern","title","required","Filter","onChange","event","SearchByName","currentTarget","Home"],"sourceRoot":""}