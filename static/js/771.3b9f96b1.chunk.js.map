{"version":3,"file":"static/js/771.3b9f96b1.chunk.js","mappings":"gMAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,QAA5B,EACnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASA,SAASG,SAA5B,EACpBC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASA,SAASK,KAA5B,EAEhBC,EAAY,SAAAP,GAAK,OAAIA,EAAMC,SAASO,MAAnB,E,SCH9B,EAA4B,+BAA5B,EAAsE,8BAAtE,EAAgH,+BAAhH,EAA6J,iCAA7J,EAA2M,gCAA3M,EAA0P,kC,SCInP,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYd,GAAae,KAAI,SAAAC,GAAO,OAAIA,EAAQC,IAAZ,IA2BrD,OACE,iBAAMC,SA1Ba,SAAAC,GACnBA,EAAEC,iBAEF,MAAyBD,EAAEE,OAAnBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,OAEVT,EAASU,SAASN,EAAKO,OACzBC,MAAM,GAAD,OAAIR,EAAKO,MAAT,iCAIPE,QAAQC,IAAI,CACVV,KAAMA,EAAKO,MACXF,OAAQA,EAAOE,QAGjBb,GACEiB,EAAAA,EAAAA,IAAW,CACTX,KAAMA,EAAKO,MACXF,OAAQA,EAAOE,SAInBL,EAAEE,OAAOQ,QACV,EAGC,UACE,mBAAOC,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,mBACA,kBACED,UAAWC,EACXC,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,mBAAOL,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,qBAEA,kBACED,UAAWC,EACXC,KAAK,MACLf,KAAK,SACLgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAASF,UAAWC,EAAjC,6BAMP,CChED,MAAuB,0BAAvB,EAAwD,0BAAxD,EAAiG,kC,SCapFK,EAAc,WACzB,IAAMlC,GAAWY,EAAAA,EAAAA,IAAYd,GACvBK,GAAYS,EAAAA,EAAAA,IAAYV,GACxBK,GAASK,EAAAA,EAAAA,IAAYN,GACrBD,GAAQO,EAAAA,EAAAA,IAAYR,GAEpB+B,EAAkBnC,EAASO,QAAO,SAAAO,GAAO,OAC7CA,EAAQC,KAAKqB,cAAcf,SAASd,EADS,IAIzCE,GAAWC,EAAAA,EAAAA,MAMjB,OAJA2B,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,MACV,GAAE,CAAC7B,KAGF,gCACGN,IAAa,+CACbE,IAAS,uBAAIA,IACbL,EAASuC,OAAS,IACjB,eAAIX,UAAWC,EAAf,SACGM,EAAgBtB,KAAI,SAAAC,GACnB,OACE,gBAAIc,UAAWC,EAAf,UACGf,EAAQC,KADX,MACoBD,EAAQM,QAC1B,mBACEQ,UAAWC,EACXW,QAAS,kBAAM/B,GAASgC,EAAAA,EAAAA,IAAc3B,EAAQ4B,IAArC,EACTC,SAAUxC,EAHZ,gEAF4BW,EAAQ4B,GAWzC,QAKV,E,SCrDD,EAA4B,0BAA5B,EAA8D,sBCIjDE,EAAS,WACpB,IAAMnC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,mBAAOkB,UAAWC,EAAlB,mCAEE,kBACED,UAAWC,EACXC,KAAK,OACLf,KAAK,SACLgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRY,SAdiB,SAAAC,GACrBrC,GAASsC,EAAAA,EAAAA,IAAaD,EAAME,cAAc1B,OAC3C,MAgBF,ECtBc,SAAS2B,IACtB,OACE,4BACE,SAACzC,EAAD,KACA,SAACoC,EAAD,KACA,SAACV,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts.entities;\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\nexport const getError = state => state.contacts.contacts.error;\n\nexport const getFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"labelName\":\"ContactForm_labelName__3dKMP\",\"spanName\":\"ContactForm_spanName__OibhL\",\"imputName\":\"ContactForm_imputName__XQvsX\",\"labelNumber\":\"ContactForm_labelNumber__ifMHw\",\"spanNumber\":\"ContactForm_spanNumber__-FZxR\",\"buttonSubmit\":\"ContactForm_buttonSubmit__8QQ3D\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/contactOperation';\nimport css from '../ContactForm/ContactForm.module.css';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const userName = useSelector(getContacts).map(contact => contact.name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = e.target;\n\n    if (userName.includes(name.value)) {\n      alert(`${name.value} is already in your contact`);\n      return;\n    }\n\n    console.log({\n      name: name.value,\n      number: number.value,\n    });\n\n    dispatch(\n      addContact({\n        name: name.value,\n        number: number.value,\n      })\n    );\n\n    e.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={css.labelName}>\n        <span className={css.spanName}>Name</span>\n        <input\n          className={css.imputName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label className={css.labelNumber}>\n          <span className={css.spanNumber}>Number</span>\n\n          <input\n            className={css.imputName}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.buttonSubmit}>\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"item__button\":\"ContactList_item__button__8BPA5\"};","import css from '../ContactList/ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/contacts/contactOperation';\nimport { useEffect } from 'react';\nimport {\n  getContacts,\n  getFilter,\n  getIsLoading,\n  getError,\n} from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const filter = useSelector(getFilter);\n  const error = useSelector(getError);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      {contacts.length > 0 && (\n        <ul className={css.list}>\n          {visibleContacts.map(contact => {\n            return (\n              <li className={css.item} key={contact.id}>\n                {contact.name} : {contact.number}\n                <button\n                  className={css.item__button}\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                  disabled={isLoading}\n                >\n                  Видалити\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"imputName\":\"Filter_imputName__aft7c\",\"label\":\"Filter_label__vEd1E\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SearchByName } from 'redux/contacts/contactsReducer';\nimport css from '../Filter/Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterOnChange = event => {\n    dispatch(SearchByName(event.currentTarget.value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.imputName}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={filterOnChange}\n      />\n    </label>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\n\nexport default function Home() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["getContacts","state","contacts","entities","getIsLoading","isLoading","getError","error","getFilter","filter","ContactForm","dispatch","useDispatch","userName","useSelector","map","contact","name","onSubmit","e","preventDefault","target","number","includes","value","alert","console","log","addContact","reset","className","css","type","pattern","title","required","ContactList","visibleContacts","toLowerCase","useEffect","fetchContacts","length","onClick","deleteContact","id","disabled","Filter","onChange","event","SearchByName","currentTarget","Home"],"sourceRoot":""}